name: Publish

on:
  push:
    tags:
        - '*'

jobs:
  container:
    name: Publish Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
            fetch-depth: 0
      - name: Build Docker Image
        run: |
            tag=$(git describe --tags --abbrev=0)
            docker build . -t elzik/mecon:$tag -f ./Build/Dockerfile
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push Docker Image
        run: |
            tag=$(git describe --tags --abbrev=0)
            docker push elzik/mecon:$tag
  binaries:
    name: Publish Binaries
    needs: container
    strategy:
      matrix:
        kind: ['linux', 'windows', 'macOS']
        include:
          - kind: linux
            os: ubuntu-latest
            target: linux-x64
          - kind: windows
            os: windows-latest
            target: win-x64
          - kind: macOS
            os: macos-latest
            target: osx-x64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
            fetch-depth: 0
      - name: Setup dotnet
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x
      - name: Build
        shell: bash
        run: |
          tag=$(git describe --tags --abbrev=0)
          release_name="mecon-$tag-${{ matrix.target }}"
          # Build everything
          dotnet publish src/Elzik.Mecon.Console -p:PublishSingleFile=true --runtime "${{ matrix.target }}" -c Release --self-contained true -p:PublishTrimmed=true -o "$release_name"
          # Pack files
          if [ "${{ matrix.target }}" == "win-x64" ]; then
            # Pack to zip for Windows
            7z a -tzip "${release_name}.zip" "./${release_name}/*"
          else
            tar -C "./$release_name" -czvf "${release_name}.tar.gz" mecon
          fi
          # Delete output directory
          rm -r "$release_name"
      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
          files: "mecon*"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}